{
  "_args": [
    [
      {
        "raw": "postcss-quantity-queries@^0.4.0",
        "scope": null,
        "escapedName": "postcss-quantity-queries",
        "name": "postcss-quantity-queries",
        "rawSpec": "^0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/var/www/schoolcounty/schoolcounty/node_modules/rucksack-css"
    ]
  ],
  "_from": "postcss-quantity-queries@>=0.4.0 <0.5.0",
  "_id": "postcss-quantity-queries@0.4.0",
  "_inCache": true,
  "_location": "/postcss-quantity-queries",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "pascalduez",
    "email": "public@pascalduez.me"
  },
  "_npmVersion": "2.14.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postcss-quantity-queries@^0.4.0",
    "scope": null,
    "escapedName": "postcss-quantity-queries",
    "name": "postcss-quantity-queries",
    "rawSpec": "^0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rucksack-css"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-quantity-queries/-/postcss-quantity-queries-0.4.0.tgz",
  "_shasum": "be1370a7be9312a173639c0869aa4210244f86ce",
  "_shrinkwrap": null,
  "_spec": "postcss-quantity-queries@^0.4.0",
  "_where": "/var/www/schoolcounty/schoolcounty/node_modules/rucksack-css",
  "author": {
    "name": "Pascal Duez",
    "url": "https://github.com/pascalduez"
  },
  "bugs": {
    "url": "https://github.com/pascalduez/postcss-quantity-queries/issues"
  },
  "dependencies": {
    "balanced-match": "^0.2.0",
    "postcss": "^5.0.4"
  },
  "description": "PostCSS plugin enabling quantity-queries",
  "devDependencies": {
    "babel": "^5.8.21",
    "babel-eslint": "^4.1.0",
    "babel-istanbul": "^0.3.18",
    "coveralls": "^2.11.2",
    "eslint": "^1.2.1",
    "faucet": "0.0.1",
    "opn-cli": "^1.0.0",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "be1370a7be9312a173639c0869aa4210244f86ce",
    "tarball": "https://registry.npmjs.org/postcss-quantity-queries/-/postcss-quantity-queries-0.4.0.tgz"
  },
  "files": [
    "dist",
    "CHANGELOG.md",
    "index.js",
    "README.md",
    "UNLICENSE"
  ],
  "gitHead": "bae8fdf656895c9fda607b780d7b7a7a916119c7",
  "homepage": "https://github.com/pascalduez/postcss-quantity-queries",
  "keywords": [
    "css",
    "quantity-queries",
    "postcss",
    "postcss-plugin"
  ],
  "license": "Unlicense",
  "maintainers": [
    {
      "name": "pascalduez",
      "email": "public@pascalduez.me"
    }
  ],
  "name": "postcss-quantity-queries",
  "optionalDependencies": {},
  "readme": "# postcss-quantity-queries\n\n[![npm version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\n\n> [PostCSS] plugin enabling quantity-queries.\n\nThis plugin is derived from the Sass [Quantity Queries mixins] by Daniel Guillan.  \nFor informations about quantity queries check those resources:  \n[Quantity Queries for CSS][]  \n[Styling elements based on sibling count][]  \n[Daniel’s demo on CodePen][]  \n\n\n\n## Installation\n\n```\nnpm install postcss-quantity-queries --save-dev\n```\n\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar quantityQueries = require('postcss-quantity-queries');\n\nvar css = fs.readFileSync('input.css', 'utf8');\n\nvar output = postcss()\n  .use(quantityQueries())\n  .process(css)\n  .css;\n```\n\n\n\n## API\n\n### at-least\n\nTarget `count` items or more:\n```css\n:at-least(count) { ... }\n```\ninput:\n```css\nul > li:at-least(4) {\n  color: rebeccapurple;\n}\n```\noutput:\n```css\nul > li:nth-last-child(n+4),\nul > li:nth-last-child(n+4) ~ li {\n  color: rebeccapurple;\n}\n```\n\n\n\n### at-most\n\nTarget `count` items or less:\n```css\n:at-most(count) { ... }\n```\ninput:\n```css\nul > li:at-most(4) {\n  color: rebeccapurple;\n}\n```\noutput:\n```css\nul > li:nth-last-child(-n+4):first-child,\nul > li:nth-last-child(-n+4):first-child ~ li {\n  color: rebeccapurple;\n}\n```\n\n\n\n### between\n\nTarget a range of items between `start` and `end`:\n```css\n:between(start, end) { ... }\n```\ninput:\n```css\nul > li:between(4, 6) {\n  color: rebeccapurple;\n}\n```\noutput:\n```css\nul > li:nth-last-child(n+4):nth-last-child(-n+6):first-child,\nul > li:nth-last-child(n+4):nth-last-child(-n+6):first-child ~ li {\n  color: rebeccapurple;\n}\n```\n\n\n\n### exactly\n\nTarget exactly `count` items:\n```css\n:exactly(count) { ... }\n```\ninput:\n```css\nul > li:exactly(4) {\n  color: rebeccapurple;\n}\n```\noutput:\n```css\nul > li:nth-last-child(4):first-child,\nul > li:nth-last-child(4):first-child ~ li {\n  color: rebeccapurple;\n}\n```\n\n### All pseudo-selector extensions\n\nSelector | Description\n---|---\n[#](#at-least) `:at-least(count) { … }` | Target `count` items or more\n[#](#at-most) `:at-most(count) { … }` | Target `count` items or less\n[#](#between) `:between(start, end) { … }` | Target a range of items between `start` and `end`\n[#](#exactly) `:exactly(count) { … }` | Target exactly `count` items\n\n## At-rule API\n\nThere is also an at-rule API, similar to pre-processors.  \nAlthough the recommended API is the pseudo-selectors one.\n\n```css\n@at-least count [, selector] { ... }\n```\n```css\n@at-most count [, selector] { ... }\n```\n```css\n@between start end [, selector] { ... }\n```\n```css\n@exactly count [, selector] { ... }\n```\n\n```css\nul > li {\n  @at-least 4 span {\n    color: rebeccapurple;\n  }\n}\n\nul > li {\n  @between 4 6 {\n    color: rebeccapurple;\n  }\n}\n```\n\nCheck out the [tests](test/fixtures) for more examples.\n\n\n\n## Credits\n\n* [Pascal Duez](https://twitter.com/pascalduez)\n\n\n## Licence\n\npostcss-quantity-queries is [unlicensed](http://unlicense.org/).\n\n\n\n[PostCSS]: https://github.com/postcss/postcss\n[Quantity Queries mixins]: https://github.com/danielguillan/quantity-queries\n[Quantity Queries for CSS]: http://alistapart.com/article/quantity-queries-for-css\n[Styling elements based on sibling count]: http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3\n[Daniel’s demo on CodePen]: http://codepen.io/danielguillan/pen/GgBOxm\n\n[npm-url]: https://www.npmjs.org/package/postcss-quantity-queries\n[npm-image]: http://img.shields.io/npm/v/postcss-quantity-queries.svg?style=flat-square\n[travis-url]: https://travis-ci.org/pascalduez/postcss-quantity-queries?branch=master\n[travis-image]: http://img.shields.io/travis/pascalduez/postcss-quantity-queries.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/pascalduez/postcss-quantity-queries\n[coveralls-image]: https://img.shields.io/coveralls/pascalduez/postcss-quantity-queries.svg?style=flat-square\n[depstat-url]: https://david-dm.org/pascalduez/postcss-quantity-queries\n[depstat-image]: https://david-dm.org/pascalduez/postcss-quantity-queries.svg?style=flat-square\n[license-image]: http://img.shields.io/npm/l/postcss-quantity-queries.svg?style=flat-square\n[license-url]: UNLICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pascalduez/postcss-quantity-queries.git"
  },
  "scripts": {
    "test": "make"
  },
  "version": "0.4.0"
}
